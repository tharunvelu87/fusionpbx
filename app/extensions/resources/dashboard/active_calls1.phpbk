<?php
/*
  app/extensions/resources/dashboard/active_calls.php
  FusionPBX Dashboard Widget: Live Active Calls
  Enhanced: live timer, correct extension detection, domain toggle, original icons
*/

require_once dirname(__DIR__, 4) . '/resources/require.php';
require_once 'resources/check_auth.php';

if (! permission_exists('call_active_view')) {
    echo 'access denied';
    exit;
}
if (session_status() !== PHP_SESSION_ACTIVE) {
    session_start();
}

/**
 * Retrieve active calls, one display leg per call UUID.
 * @param bool $show_all_calls Include all domains if true; otherwise restrict to current domain
 * @return array List of calls (icon_html, caller, destination, duration, status)
 */
function get_active_calls($show_all_calls = false) {
    $es = event_socket::create();
    if (! $es || ! $es->is_connected()) {
        return [];
    }

    $json = trim($es->api('show channels as json'));
    $data = json_decode($json, true);
    $rows = $data['rows'] ?? [];

    // Group by call_uuid (fallback to channel uuid)
    $groups = [];
    foreach ($rows as $r) {
        if (! in_array($r['direction'], ['inbound','outbound'])) continue;
        $uuid = $r['call_uuid'] ?: $r['uuid'];
        $groups[$uuid][] = $r;
    }

    $domain_name = $_SESSION['domain_name'];
    $result = [];

    foreach ($groups as $legs) {
        // Domain filter
        $in_domain = false;
        foreach ($legs as $l) {
            $ctx = $l['context'] ?: $l['presence_id'];
            $dom = strpos($ctx,'@')!==false ? explode('@',$ctx)[1] : $ctx;
            if ($show_all_calls || $dom === $domain_name) {
                $in_domain = true;
                break;
            }
        }
        if (! $in_domain) continue;

        // Exclude gateway inbound legs
        $filtered = array_filter($legs, function($l) {
            return !(
                $l['direction']==='inbound'
                && stripos($l['application_data'],'sofia/gateway/')!==false
            );
        });
        if (empty($filtered)) continue;

        // Detect ringing (EARLY)
        $ring = false;
        foreach ($filtered as $l) {
            if ($l['callstate'] === 'EARLY') {
                $ring = true;
                break;
            }
        }

        // Select display leg
        $leg_to_show = null;
        if ($ring) {
            // show a ringing leg
            foreach ($filtered as $l) {
                if ($l['callstate'] === 'EARLY') {
                    $leg_to_show = $l;
                    break;
                }
            }
        } else {
            // Prefer the internal ACTIVE leg (answered extension)
            foreach ($filtered as $l) {
                if ($l['callstate']==='ACTIVE'
                    && stripos($l['application_data'],'sofia/internal/')!==false) {
                    $leg_to_show = $l;
                    break;
                }
            }
            // Fallback to inbound ACTIVE
            if (! $leg_to_show) {
                foreach ($filtered as $l) {
                    if ($l['direction']==='inbound' && $l['callstate']==='ACTIVE') {
                        $leg_to_show = $l;
                        break;
                    }
                }
            }
            // Then outbound ACTIVE
            if (! $leg_to_show) {
                foreach ($filtered as $l) {
                    if ($l['direction']==='outbound' && $l['callstate']==='ACTIVE') {
                        $leg_to_show = $l;
                        break;
                    }
                }
            }
            // Final fallback
            if (! $leg_to_show) {
                $leg_to_show = reset($filtered);
            }
        }

        // Determine status & icon
        $status = '';
        $icon_file = '';
        if ($ring) {
            $status = 'Ringing';
            // inbound or outbound ringing
            $in = false;
            foreach ($filtered as $l) {
                if ($l['direction']==='inbound') { $in = true; break; }
            }
            $icon_file = $in
                       ? 'icon_cdr_inbound_no_answer.png'
                       : 'icon_cdr_outbound_no_answer.png';
        } elseif ($leg_to_show['callstate'] === 'ACTIVE') {
            $status = 'Connected';
            $icon_file = ($leg_to_show['direction']==='outbound')
                       ? 'icon_cdr_outbound_answered.png'
                       : 'icon_cdr_inbound_answered.png';
        } else {
            $status = 'Dialed';
            $icon_file = 'icon_cdr_outbound_no_answer.png';
        }

        // Caller
        $caller = $leg_to_show['cid_num'] ?: $leg_to_show['initial_cid_num'];

        // Destination: if internal leg, extract extension; else fallback
        if (! $ring
            && $leg_to_show['callstate']==='ACTIVE'
            && stripos($leg_to_show['application_data'],'sofia/internal/')!==false
            && preg_match("#sofia/internal/([^/@]+)#", $leg_to_show['application_data'], $m)) {
            $dst = $m[1];
        } elseif ($ring || $leg_to_show['direction']==='outbound') {
            $dst = $leg_to_show['dest'] ?: $leg_to_show['initial_dest'];
        } else {
            if (preg_match("#\]sofia/[^/]+/sip:([^@]+)#", $leg_to_show['application_data'], $m2)) {
                $dst = end($m2);
            } else {
                $dst = $leg_to_show['dest'];
            }
        }

        // Duration calculation
        $sec = 0;
        if (! $ring && $leg_to_show['callstate']==='ACTIVE') {
            $ans = intval($leg_to_show['answered_epoch'] ?? 0);
            if ($ans>0) {
                $sec = time() - $ans;
            } elseif (!empty($leg_to_show['created_epoch'])) {
                $sec = time() - intval($leg_to_show['created_epoch']);
            }
        }
        $h = floor($sec/3600);
        $min = floor(($sec%3600)/60);
        $s = $sec%60;
        $duration = $h>0
                  ? sprintf('%02d:%02d:%02d',$h,$min,$s)
                  : sprintf('%02d:%02d',$min,$s);

        // Icon HTML
        $theme = $_SESSION['domain']['template']['name'] ?? 'default';
        $icon_url = PROJECT_PATH . "/themes/{$theme}/images/{$icon_file}";
        $icon_html = "<img src='{$icon_url}' alt='{$status}' />";

        $result[] = [
            'icon_html'   => $icon_html,
            'caller'      => htmlspecialchars($caller),
            'destination' => htmlspecialchars($dst),
            'duration'    => $duration,
            'status'      => $status
        ];
    }

    return $result;
}

// AJAX endpoint
if (isset($_GET['ajax'])) {
    $show_all = permission_exists('call_active_all')
              && !empty($_GET['show_all'])
              && $_GET['show_all']==='1';
    $calls = get_active_calls($show_all);
    $count = count($calls);

    $rows = '';
    foreach ($calls as $c) {
        $rows .= '<tr>'
               . "<td style='text-align:center;'>{$c['icon_html']}</td>"
               . "<td class='hud_text'>{$c['caller']}</td>"
               . "<td class='hud_text'>{$c['destination']}</td>"
               . "<td class='hud_text call-duration'>{$c['duration']}</td>"
               . "<td class='hud_text'>{$c['status']}</td>"
               . '</tr>';
    }
    if ($rows==='') {
        $rows = "<tr><td colspan='5' class='hud_text' style='text-align:center;color:#888;'>No active calls</td></tr>";
    }
    echo json_encode(['count'=>$count,'rows'=>$rows]);
    exit;
}

// Render widget
$toggle = ($dashboard_details_state==='disabled')
        ? ''
        : " onclick=\"$('#hud_active_calls_details').slideToggle('fast'); toggle_grid_row_end('{$dashboard_name}'); refreshActiveCalls();\"";
?>
<div class="hud_box" id="active_calls_widget">
  <div class="hud_content"<?php echo $toggle; ?>>
    <span class="hud_title"><?php echo $text['label-active_calls'] ?? 'Active Calls'; ?></span>
    <div style="position:relative; display:inline-block; margin:0.5rem 0;">
      <span class="hud_stat"><i class="<?php echo htmlspecialchars($dashboard_icon ?: 'fas fa-phone'); ?>"></i></span>
      <span id="active_calls_count" style="
        position:absolute; top:22px; left:24px;
        background:<?php echo $settings->get('theme','dashboard_number_background_color')?:'#ea4c46'; ?>;
        color:<?php echo $settings->get('theme','dashboard_number_text_color')?:'#fff'; ?>;
        font-size:12px; font-weight:bold;
        padding:2px 6px; border-radius:10px;">
        0
      </span>
    </div>
  </div>

  <?php if ($dashboard_details_state!=='disabled'): ?>
    <div class="hud_details hud_box" id="hud_active_calls_details" style="display:none; padding:10px;">
      <?php if (permission_exists('call_active_all')): ?>
        <div style="text-align:right; margin-bottom:5px;">
          <button id="btn_toggle_all" class="btn">Show All Domains</button>
        </div>
      <?php endif; ?>
      <table class="tr_hover" width="100%" cellpadding="0" cellspacing="0">
        <tr>
          <th class="hud_heading">&nbsp;</th>
          <th class="hud_heading">Caller</th>
          <th class="hud_heading">Destination</th>
          <th class="hud_heading">Duration</th>
          <th class="hud_heading">Status</th>
        </tr>
        <tbody id="active_calls_rows">
          <tr><td colspan="5" class="hud_text" style="text-align:center;color:#888;">Loadingâ€¦</td></tr>
        </tbody>
      </table>
    </div>
  <?php endif; ?>

  <span class="hud_expander"<?php echo $toggle; ?>><span class="fas fa-ellipsis-h"></span></span>
</div>

<style>
  .blink { animation: blinker 1s linear infinite; }
  @keyframes blinker { 50% { opacity:0; } }
</style>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
jQuery(function($) {
  const URL = '<?php echo PROJECT_PATH; ?>/app/extensions/resources/dashboard/active_calls1.php?ajax=1';
  let showAll = false;

  function refreshActiveCalls() {
    $.getJSON(URL + (showAll ? '&show_all=1' : ''), function(data) {
      $('#active_calls_count').text(data.count);
      $('#active_calls_rows').html(data.rows);
    }).fail(function() {
      $('#active_calls_count').text('0');
      $('#active_calls_rows').html(
        "<tr><td colspan='5' class='hud_text' style='text-align:center;color:#888;'>Error loading</td></tr>"
      );
    });
  }

  refreshActiveCalls();
  setInterval(refreshActiveCalls, 5000);
  $('#active_calls_widget').on('click', '.hud_content, .hud_expander', refreshActiveCalls);
  $('#btn_toggle_all').click(function(e) {
    e.stopPropagation();
    showAll = !showAll;
    $(this).text(showAll ? 'Show Current Domain' : 'Show All Domains');
    refreshActiveCalls();
  });
  setInterval(function() {
    $('.call-duration').each(function() {
      let parts = $(this).text().split(':').map(Number);
      let secs = parts.length===3 ? parts[0]*3600 + parts[1]*60 + parts[2] : parts[0]*60 + parts[1];
      secs = isNaN(secs) ? 0 : secs + 1;
      let h = Math.floor(secs/3600), m = Math.floor((secs%3600)/60), s = secs%60;
      let txt = (h>0 ? h.toString().padStart(2,'0')+':' : '')
              + m.toString().padStart(2,'0')+':'
              + s.toString().padStart(2,'0');
      $(this).text(txt);
    });
  }, 1000);
});
</script>
